openapi: 3.1.0
info:
  title: X (Twitter) API Bridge
  description: API for posting tweets, creating threads, and searching tweets via Tweepy
  version: 1.0.0
servers:
  - url: https://gpt-x-oauth-bridge.onrender.com
    description: Production server
paths:
  /tweet:
    post:
      summary: Create a new tweet
      operationId: createTweet
      tags:
        - tweets
      security:
        - ApiKeyAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TweetRequest'
      responses:
        '200':
          description: Tweet created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TweetResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /tweet/{tweet_id}/reply:
    post:
      summary: Reply to an existing tweet
      operationId: replyToTweet
      tags:
        - tweets
      security:
        - ApiKeyAuth: []
      parameters:
        - name: tweet_id
          in: path
          required: true
          schema:
            type: string
          description: ID of the tweet to reply to
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TweetRequest'
      responses:
        '200':
          description: Reply created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReplyResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /thread:
    post:
      summary: Create a thread of tweets
      operationId: createThread
      tags:
        - tweets
      security:
        - ApiKeyAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ThreadRequest'
      responses:
        '200':
          description: Thread created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThreadResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /tweet/{tweet_id}:
    get:
      summary: Get a specific tweet
      operationId: getTweet
      tags:
        - tweets
      security:
        - ApiKeyAuth: []
      parameters:
        - name: tweet_id
          in: path
          required: true
          schema:
            type: string
          description: ID of the tweet to retrieve
      responses:
        '200':
          description: Tweet retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TweetResponse'
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /tweets/search:
    get:
      summary: Search for tweets
      operationId: searchTweets
      tags:
        - tweets
      security:
        - ApiKeyAuth: []
      parameters:
        - name: query
          in: query
          required: true
          schema:
            type: string
          description: Search query string
      responses:
        '200':
          description: Search results retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'

components:
  schemas:
    TweetRequest:
      type: object
      required:
        - text
      properties:
        text:
          type: string
          description: The content of the tweet
          example: "Hello, World!"

    ThreadRequest:
      type: object
      required:
        - tweets
      properties:
        tweets:
          type: array
          items:
            type: string
          description: Array of tweet texts to create as a thread
          example: ["First tweet", "Second tweet", "Third tweet"]

    TweetResponse:
      type: object
      properties:
        id:
          type: string
          description: The ID of the created tweet
        text:
          type: string
          description: The content of the tweet

    ReplyResponse:
      type: object
      properties:
        id:
          type: string
          description: The ID of the reply tweet
        text:
          type: string
          description: The content of the reply
        in_reply_to:
          type: string
          description: The ID of the tweet being replied to

    ThreadResponse:
      type: object
      properties:
        thread:
          type: array
          items:
            $ref: '#/components/schemas/TweetResponse'
          description: Array of created tweets in the thread

    SearchResponse:
      type: object
      properties:
        tweets:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                description: Tweet ID
              text:
                type: string
                description: Tweet content
              author_id:
                type: string
                description: ID of the tweet author

    Error:
      type: object
      required:
        - error
      properties:
        error:
          type: string
          description: Error message

  responses:
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: Authorization
      description: API Key with format "Bearer your-api-key"
